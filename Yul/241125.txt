[추천시스템]
[recommender_system]
D:\공유강의자료\선생님 깃허브\human-da-master (2)\human-da-master\doc\14.recommender-system.pdf
결합하면 전부 하이브리드 모델
협력필터링 보완하기위해 하이브리드 많이 한다.
작업방식: 
사용자는 행 인덱스처럼, item은 컬럼으로 
평점(보완: 선호도) 점수가 나오면 그 점수를 이용해서 비슷한(유사한) 사용자를 찾아서 유사한 사용자가 높게 평점한 영화중 이 사용자가 아직 선택하지 않은 item을 추천
혹은 수직하게 item의 유사도를 판단.
사용자가 높은 평점을 준 영화와 비슷한 평점 패턴을 가진 영화 찾아. 유사한 영화를 찾으면, 이 유사한 영화중 특정 유저가 아직 보지 않은 영화를 추천 아이템 기반 추천. 
아이템기반 유사도가 더 많이 사용되고있다.(정확도가 조금 더 높다고 한다.)
D:\Work\workspace\ml-basic\example_20.ipynb
여기서 추천시스템 손으로 구현하는거 실습
준비된 패키지가 있음.(전에 이거 설치하다가 꼬임)
해결 방안으로 2개가 있음
1. 우리가 가진 패키지 1점대로 바꾸거나
2. 패키지 가져와서 빌드하기
우리는 덜 피곤하게 1. 다운그레이드하기로.

가상환경을 다운그레이드 한 파일
D:\Work\workspace\ml-basic\example_21_install.ipynb

[실습파일]
D:\Work\workspace\ml-basic\example_21 copy.ipynb
> Neighborhood_Model

> Latent Factor Model 잠재요인 협업 필터링
만약 users 100, songs 1000이면 이거를 > 100 * ? 닷 1000*?
>100 * 1000 > 100 * ? 닷 ? *1000 > 결과적으로 100 * 1000 남음 단, 100% 같게 복원은 불가능히다. 치환햇을때 가장 유사한 값을 찾아가는게 목표다
사용자가 어떤 상품에 대해 평점 매긴게 많지 않다 > 즉 null이 많다. 이 빈 값을 어떻게 매꿀 것인가. 
> ppt 9 쪽
factor를 고쳐가면서 나온 값이 초기값과 최대한 유사해지게 해야한다. 팩토라이제이션해줘야함. 경사하강법(sgd, gd) 사용
미분하면서 최적점 찾아가기
결과와 초기값을 비교하면서 초기값 중 있는 값을 기준으로 최대한 비슷하게 조정 > 이때 평가하지 않은 값이 예상 값이 된다. 계산 > 비교 > 오차조정 > 계산 반복
이를 잠재 요인 분석이라고 한다. 
사용자에 대해서 숨겨진 패턴 찾기. 각 아이템은 사용자의 패턴이 있을 것이다. 사용자와 아이템을 연결하는 무언가 숨겨진(핵심적인) 요인이 있을 것이다. 그걸 찾자는 것

